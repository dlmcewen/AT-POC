"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var axios = require('axios');
var chalk = require('chalk');
var moment = require('moment');
var TestRail = /** @class */ (function () {
    function TestRail(options) {
        this.options = options;
        this.base = "https://" + options.domain + "/index.php?/api/v2";
    }
    TestRail.prototype.createRun = function (name, description) {
        var _this = this;
        axios({
            method: 'post',
            url: "https://" + this.options.domain + "/index.php?/api/v2/add_run/" + this.options.projectId,
            headers: { 'Content-Type': 'application/json' },
            auth: {
                username: this.options.username,
                password: this.options.password,
            },
            data: JSON.stringify({
                suite_id: this.options.suiteId,
                name: name,
                description: description,
                include_all: true,
            }),
        })
        .then(function (response) {
            _this.runId = response.data.id;
        })
        .catch(function (error) { return console.error(error); });
    };
    TestRail.prototype.deleteRun = function () {
        axios({
            method: 'post',
            url: this.base + "/delete_run/" + this.runId,
            headers: { 'Content-Type': 'application/json' },
            auth: {
                username: this.options.username,
                password: this.options.password,
            },
        })
        .catch(function (error) { return console.error(error); });
    };
    TestRail.prototype.createRunAndPublishResults = function (results) {

        var _this = this;

        var baseUrl = 'https://' + this.options.domain + '/index.php?';
        var apiUrl = baseUrl + '/api/v2';
        var options = this.options;
        var testName = 'Automated test run ' + moment().format('MMM Do YYYY, HH:mm (Z)');

        results.forEach(function(result) {
          result[options.environmentFieldName] = options.environmentFieldValue;
        });

        axios({
            method: 'post',
            url: apiUrl + '/add_run/' + this.options.projectId,
            headers: { 'Content-Type': 'application/json' },
            auth: {
                username: options.username,
                password: options.password,
            },
            data: JSON.stringify({
                suite_id: this.options.suiteId,
                name: testName,
                description: '',
                include_all: true,
            }),
        })
        .then(function (response) {
            if (options.recordResult === true) {
                _this.runId = response.data.id;
                axios({
                    method: 'post',
                    url: apiUrl + '/add_results_for_cases/' + response.data.id,
                    headers: { 'Content-Type': 'application/json' },
                    auth: {
                        username: options.username,
                        password: options.password,
                    },
                    data: JSON.stringify({ results: results }),
                })
                .then(function (response2) {
                    console.log('\n', chalk.magenta.underline.bold('(TestRail Reporter)'));
                    console.log('\n', " - Results are published to " + chalk.magenta(baseUrl + '/runs/view/' + response.data.id), '\n');
                })
                .catch(function (error) { return console.error(error); });
            }
        })
        .catch(function (error) { return console.error(error); });

    };
    return TestRail;
}());
exports.TestRail = TestRail;
//# sourceMappingURL=testrail.js.map